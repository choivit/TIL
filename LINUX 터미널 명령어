- >, >>
    - >
        - 명령어 뒤에 나오는 파일에 쓸때 사용(=write or overwrite)
        - 예)
            - echo asdf > text.txt
                - 파일이 없을 경우 생성하고 있을 경우 덮어씀.
    - >>
        - 명령어 귀에 나오는 파일에 추가할 때 사용(=append)
        - 예)
            - echo asdf >> text.txt
                - 파일이 없을 경우 생성하고 있을 경우 추가 됨.
                - 
- pwd(print working directory)
    - 현재 작업중인 디렉토리 정보 출력
- cd(change directory)
    - 경로 이동(상대경로/절대경로)
        - 절대경로
            - 최상위 디렉토리 (/)부터 시작해서 목표 디렉토리까지 가는 경로를 전부 기술하는 방식
        - 상대경로
            - 현재 자신이 있는 위치를 기준으로 이동하는 방식
            - 현재 자신의 위치는 .(마침표)로 표기
            - 자신의 위치에서 상위 위치는 ..으로 표기
            - 예제) /a/b/c/d
                - b에서 d로 이동해보자
                    - ./c/d
                - 
- ls(list)
    - 디렉토리 목록 확인
    - 옵션
        - 자주 사용하는 옵션
            - -l
                - 디렉토리 내 디렉토리, 파일 상세보기
            - -a
                - 경로안에 모든 파일 나열.(숨김파일도 포함)
                - -al
                    - 상위까지 상세보기
            - -R
                - 위치한 디렉토리 하부 디렉토리의 파일까지 모두 출력.
            - -h
                - 파일크기를 해석하기 편하게 출력.
            - -r
                - 출력 결과를 내림차순으로 정렬.
            - -t
                - 출력 결과를 파일이 수정된 시간을 기준으로 정렬.
- cp(copy)
    - 파일 혹은 디렉토리 복사
    - 디렉토리 복사할 때 -r 옵션을 주어야 함.
- mv(move)
    - 파일 혹은 디렌토리 이동 혹은 이름을 변경하는 용도로도 사용
    - 별다른 옵션 없음
    - 이름을 바꿀때
        - mv (기존이름) (바꿀이름)
    - 예제)
        - mv testfile testfileAfter
- mkdir(make diretory)
    - 디렉토리 생성
    - -p 옵션을 주면 하위 디렉토리까지 한번에 생성 가능
    - 예제)
        - mkdir -p a/b/c/d/e/
- rm(remove)
    - 파일이나 디렉토리를 삭제
    - 디렉토리 삭제시 -r 옵션 추가해야 함.
    - -f 옵션을 주면 삭제여부를 묻지 않고 바로 삭제.
    - 디렉토리 삭제시 하위 디렉토리까지 모두 삭제되니 주의 요망.
    - 예제)
        - rm -f testfile1
            - 다시 묻지 않고 삭제
        - rm -rf testdir
            - 묻지않고 디렉토리 삭제
- touch
    - 파일이나 디렉토리의 최근 업데이트 일자를 현재 시간으로 변경
    - 최근 업데이트 일자는 ls -l 명령을 통해서 확인 가능.
    - 파일이나 디렉토리가 존재하지 않으면 빈 파일 생성.
- cat(concatenate)
    - 활용방법이 다양함.
        - 단순한 파일의 내용 출력.
        - 여러개의 파일을 합쳐서 하나의 파일로 만듦.
        - 기존 파일에 다른 파일의 내용을 덧붙임.
        - 새로운 파일을 생성.
        - 예제)
            - cat file1
                - 1
                - 해당 파일의 내용을 출력.
            - cat file1 file2 > file1_2
                - 파일 두개의 내용을 합쳐서 새로운 파일을 생성
                - cat (기존파일1) (기존파일2) > (새로운 파일)
            - cat file1 >> file2
                - 전자의 파일의 내용을 후자파일 내용에 추가
                - cat (내용을 뺄 파일) >> (내용을 덧붙여 줄 파일)
            - cat > file4
            - hello
            - world
                - 최상단의 파일에 상단의 내용을 저장.
                - 작성이 끝나면 ctrl+d로 파일 저장 해주어야 함.
- head
    - 파일의 앞부분을 보고싶은 줄 수만큼 보여줌.
    - 옵션을 따로 지정하지 않으면 상위 10줄.
    - 예제)
        - head -3 testfile
            - 3번째 줄까지 보여줌.
        - head testfile
            - 10번째 줄까지 보여줌.
        - 비교)
            - cat의 경우 전체 내용을 다 보여줌.
            - head의 경우 10번째 줄까지가 기본.
- tail
    - 파일의 뒷부분을 보고싶은 줄 수만큼 보여줌.
    - 옵션을 따로 지정하지 않으면 파일 하위 10줄을 보여줌.
    - 옵션 -F를 주면 파일 내용을 화면에 계속 띄워주고 파일이 변하게 되면 업데이트된 내용을 갱신해줌.
    - 주로 실시간으로 내용이 추가되는 로그파일을 모니터링할때 유용하게 사용.
        - 예제)
            - tail -3 testfile
                - 끝에서 3번째 줄까지 보여줌.
            - tail testfile
                - 끝에서 10번째 줄까지 보여줌.
            - tail -F testfile
                - 끝에서 10번째까지 보여주고 명령어가 종료되지 않으며 계속 해당 화면을 출력. 파일 내용 변경시 자동으로 갱신해줌.
- find
    - 특정 파일이나 디렉토리를 검색.
    - 사용법이 앞의 명령어들에 비해 살짝 복잡함.
    - 기본 사용법
        - find (경로검색) -name (파일명)
        - 파일명은 풀네임으로 입력해도 되지만 다음 예제처럼 특정 조건을 적용해서 검색할 수도 있음. 특정 확장자명을 찾기위해 사용 가능.
            - 예제)
                - find ./ -name ‘file1’
                    - 현재 있는 위치에서 ‘file1’ 이라는 이름의 파일을 찾음.
                - filnd ./ -name “*.jpg”
                    - 현재 있는 위치에서 “.jpg” 확장자 파일을 모두 찾음.
        - 확장자가 “.jpg”인 파일만 찾아서 삭제도 가능. exec옵션을 사용하면 됨.
            - 예제)
                - find ./ -name “*.jpg” -exec rm {} \;
                    - ?
        - -type 옵션을 주면 디렉토리나 파일만 지정해서 검색 가능.
            - 예제)
                - find ./ -type d
                    - 현재위치에서 디렉토리만 검색
                - find ./ -type f
                    - 현재 위치에서 파일만 검색
        - wc -l 옵션을 사용하면 특정 디렉토리에 맞는 결과값이 몇개 존재하는지 숫자로 알아볼 수 있음.
            - 예제)
                - find ./ -type f | wc -l
                    - 현재위치의 파일 타입의 갯수를 검색
        - 기타 유용한 명령어들
            - 예제)
                - find ./ -name “*.txt” -exec sed -i ‘s/hi/hello/g’ {} \;
                    - 특정 조건에 해당하는 파일들의 내용을 전부 찾아서 바꾸는 명령어.
                    - 확장자가 “.txt”인 파일을 찾아서 내용중에 hi라는 문자열을 hello로 바꿔줌.
                - sed -i ‘s/hi/hello/g’ testfile1.txt
                    - sed 명령어는 testfile1.txt라는 파일의 모든 hi 라는 문자열을 hello로 바꾸는 역할을 함.
                    
-참고: 1) https://itholic.github.io/linux-basic-command/
       2) https://coding-factory.tistory.com/748
